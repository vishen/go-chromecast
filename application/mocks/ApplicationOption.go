// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	application "github.com/vishen/go-chromecast/application"
)

// ApplicationOption is an autogenerated mock type for the ApplicationOption type
type ApplicationOption struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *ApplicationOption) Execute(_a0 *application.Application) {
	_m.Called(_a0)
}

// NewApplicationOption creates a new instance of ApplicationOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApplicationOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *ApplicationOption {
	mock := &ApplicationOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
